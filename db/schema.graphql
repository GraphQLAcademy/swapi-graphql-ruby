# A single film.
type Film implements Node {
  id: ID!
  starships(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): StarshipConnection
  vehicles(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): VehicleConnection
  species(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): SpeciesConnection
  characters(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): PersonConnection
  planets(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): PlanetConnection
  ratings(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): RatingConnection
  critics(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): UserConnection

  # The title of this film
  title: String!

  # The episode number of this film.
  episodeID: Int!

  # The opening paragraphs at the beginning of this film.
  openingCrawl: String!

  # The name of the director of this film.
  director: String!

  # The name(s) of the producer(s) of this film.
  producers: [String!]!

  # The ISO 8601 date format of film release at original creator country.
  releaseDate: String!

  # The ISO 8601 date format of the time that this resource was created.
  createdAt: String!

  # The ISO 8601 date format of the time that this resource was edited.
  updatedAt: String!
}

# The connection type for Film.
type FilmConnection {
  # A list of edges.
  edges: [FilmEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type FilmEdge {
  # The item at the end of the edge.
  node: Film

  # A cursor for use in pagination.
  cursor: String!
}

# Autogenerated input type of FilmRate
input FilmRateInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  filmId: ID!
  rating: Int!
}

# Autogenerated return type of FilmRate
type FilmRatePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  film: Film!
  rating: Rating
  errors: [MutationError!]!
}

# Possible Genders of a character
enum Genders {
  MALE
  FEMALE
  HERMAPHRODITE
  NONE
  NOT_AVAILABLE
}

type Mutation {
  filmRate(input: FilmRateInput!): FilmRatePayload
}

type MutationError {
  # The name of the input field that caused the error.
  field: String!

  # The description of the error.
  message: String!
}

# An object with an ID.
interface Node {
  # ID of the object.
  id: ID!
}

# Information about pagination in a connection.
type PageInfo {
  # Indicates if there are more pages to fetch
  hasNextPage: Boolean!

  # Indicates if there are any pages prior to the current page
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue
  startCursor: String

  # When paginating forwards, the cursor to continue
  endCursor: String
}

# An individual person or character within the Star Wars universe.
type Person implements Node {
  id: ID!
  starships(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): StarshipConnection
  vehicles(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): VehicleConnection
  films(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): FilmConnection
  ratings(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): RatingConnection
  ratedFilms(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): FilmConnection

  # The birth year of the person, using the in-universe standard of BBY or ABY -
  # Before the Battle of Yavin or After the Battle of Yavin. The Battle of Yavin
  # is a battle that occurs at the end of Star Wars episode IV: A New Hope.
  birthYear: String

  # The eye color of this person. Will be "unknown" if not known or "n/a" if the person does not have an eye.
  eyeColor: String

  # The gender of this person.
  gender: Genders

  # The hair color of this person. Will be "unknown" if not known or "n/a" if the person does not have hair.
  hairColor: String

  # The height of the person in centimeters.
  height: Int

  # A planet that this person was born on or inhabits.
  homeworld: Planet

  # The mass of the person in kilograms.
  mass: Int

  # The name of this person.
  name: String!

  # The skin color of this person.
  skinColor: String
}

# The connection type for Person.
type PersonConnection {
  # A list of edges.
  edges: [PersonEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type PersonEdge {
  # The item at the end of the edge.
  node: Person

  # A cursor for use in pagination.
  cursor: String!
}

# A large mass, planet or planetoid in the Star Wars Universe, at the time of 0 ABY.
type Planet implements Node {
  id: ID!
  films(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): FilmConnection
  residents(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): PersonConnection

  # The name of this planet.
  name: String!

  # The diameter of this planet in kilometers.
  diameter: Int

  # The number of standard hours it takes for this planet to complete a single rotation on its axis.
  rotationPeriod: Int

  # The number of standard days it takes for this planet to complete a single orbit of its local star.
  orbitalPeriod: Int

  # A number denoting the gravity of this planet, where "1" is normal or 1
  # standard G. "2" is twice or 2 standard Gs. "0.5" is half or 0.5 standard Gs.
  gravity: String

  # The average population of sentient beings inhabiting this planet.
  population: Float

  # The climate of this planet.
  climate: String

  # The terrain of this planet.
  terrain: String

  # The percentage of the planet surface that is naturally occuring water or bodies of water.
  surfaceWater: Float
}

# The connection type for Planet.
type PlanetConnection {
  # A list of edges.
  edges: [PlanetEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type PlanetEdge {
  # The item at the end of the edge.
  node: Planet

  # A cursor for use in pagination.
  cursor: String!
}

# The query root of this schema
type Query {
  person(id: ID!): Person
  allPeople(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): PersonConnection
  planet(id: ID!): Planet
  allPlanets(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): PlanetConnection
  film(id: ID!): Film
  allFilms(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): FilmConnection
  species(id: ID!): Species
  allSpecies(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): SpeciesConnection
  starship(id: ID!): Starship
  allStarships(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): StarshipConnection
  vehicle(id: ID!): Vehicle
  allVehicles(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): VehicleConnection

  # The currently authenticated user (if any)
  viewer: User

  # Fetches an object given its ID.
  node(
    # ID of the object.
    id: ID!
  ): Node

  # Fetches a list of objects given a list of IDs.
  nodes(
    # IDs of the objects.
    ids: [ID!]!
  ): [Node]!
}

# A rating made by a user on a film.
type Rating implements Node {
  # ID of the object.
  id: ID!

  # The critic.
  user: User!

  # The rated film.
  film: Film!

  # A film rating from 0 to 5.
  rating: Int!

  # The ISO 8601 date format of the time that this resource was created.
  createdAt: String!

  # The ISO 8601 date format of the time that this resource was updated.
  updatedAt: String!
}

# The connection type for Rating.
type RatingConnection {
  # A list of edges.
  edges: [RatingEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type RatingEdge {
  # The item at the end of the edge.
  node: Rating

  # A cursor for use in pagination.
  cursor: String!
}

# A type of person or character within the Star Wars Universe.
type Species implements Node {
  id: ID!
  people(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): PersonConnection
  films(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): FilmConnection

  # The name of this species.
  name: String!

  # The classification of this species, such as "mammal" or "reptile".
  classification: String

  # The designation of this species, such as "sentient".
  designation: String

  # The average height of this species in centimeters.
  averageHeight: Float

  # The average lifespan of this species in years, null if unknown.
  averageLifespan: Int

  # Common eye colors for this species, null if this species does not typically have eyes.
  eyeColors: [String]

  # Common hair colors for this species, null if this species does not typically have hair.
  hairColors: [String]

  # Common skin colors for this species, null if this species does not typically have skin.
  skinColors: [String!]

  # The language commonly spoken by this species.
  language: String

  # A planet that this species originates from type.
  homeworld: Planet
}

# The connection type for Species.
type SpeciesConnection {
  # A list of edges.
  edges: [SpeciesEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type SpeciesEdge {
  # The item at the end of the edge.
  node: Species

  # A cursor for use in pagination.
  cursor: String!
}

# A single transport craft that has hyperdrive capability.
type Starship implements Node, Transport {
  id: ID!

  # The name of this starship. The common name, such as "Death Star".
  name: String!

  # The model or official name of this starship. Such as "T-65 X-wing" or "DS-1 Orbital Battle Station".
  model: String

  # The manufacturer of this starship.
  manufacturer: String

  # The cost of this starship new, in galactic credits
  costInCredits: Float

  # The length of this starship in meters.
  length: Float

  # The number of personnel needed to run or pilot this starship.
  crew: String

  # The number of non-essential people this starship can transport.
  passengers: String

  # The maximum speed of this starship in atmosphere. null
  #           if this starship is incapable of atmosphering flight.
  maxAtmospheringSpeed: Int

  # The maximum number of kilograms that this starship can transport.
  cargoCapacity: Float

  # The maximum length of time that this starship can provide consumables for its entire crew without having to resupply.
  consumables: String
  pilots(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): PersonConnection

  # The class of this starship, such as "Starfighter" or "Deep Space Mobile Battlestation"
  starshipClass: String!

  # The class of this starships hyperdrive.
  hyperdriveRating: Float!

  #
  #           The Maximum number of Megalights this starship can travel in a standard hour.
  #           A "Megalight" is a standard unit of distance and has never been
  #           defined before within the Star Wars universe.
  #           This figure is only really useful for measuring the difference in speed of starships.
  #           We can assume it is similar to AU, the distance between our Sun (Sol) and Earth.
  #         
  MGLT: Int!

  # The ISO 8601 date format of the time that this resource was created.
  createdAt: String!

  # The ISO 8601 date format of the time that this resource was updated.
  updatedAt: String!
}

# The connection type for Starship.
type StarshipConnection {
  # A list of edges.
  edges: [StarshipEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type StarshipEdge {
  # The item at the end of the edge.
  node: Starship

  # A cursor for use in pagination.
  cursor: String!
}

# A single transport craft
interface Transport {
  name: String!
  model: String
  manufacturer: String
  costInCredits: Float
  length: Float
  crew: String
  passengers: String
  maxAtmospheringSpeed: Int
  cargoCapacity: Float
  consumables: String
  pilots(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): PersonConnection
}

# A user that can rate films.
type User {
  name: String!
  username: String!

  # The ISO 8601 date format of the time that this resource was created.
  createdAt: String!

  # The ISO 8601 date format of the time that this resource was updated.
  updatedAt: String!
}

# The connection type for User.
type UserConnection {
  # A list of edges.
  edges: [UserEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type UserEdge {
  # The item at the end of the edge.
  node: User

  # A cursor for use in pagination.
  cursor: String!
}

# A single transport craft that has hyperdrive capability.
type Vehicle implements Node, Transport {
  id: ID!

  # The name of this vehicle. The common name, such as "Sand Crawler" or "Speeder bike"
  name: String!

  # The model or official name of this vehicle. Such as "All-Terrain Attack Transport".
  model: String

  # The manufacturer of this vehicle.
  manufacturer: String

  # The cost of this vehicle new, in galactic credits
  costInCredits: Float

  # The length of this vehicle in meters.
  length: Float

  # The number of personnel needed to run or pilot this vehicle.
  crew: String

  # The number of non-essential people this vehicle can transport.
  passengers: String

  # The maximum speed of this vehicle in atmosphere. null
  #           if this vehicle is incapable of atmosphering flight.
  maxAtmospheringSpeed: Int

  # The maximum number of kilograms that this vehicle can transport.
  cargoCapacity: Float

  # The maximum length of time that this vehicle can provide consumables for its entire crew without having to resupply.
  consumables: String
  pilots(
    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the last _n_ elements from the list.
    last: Int

    # Returns the elements in the list that come before the specified global ID.
    before: String
  ): PersonConnection

  # The class of this vehicle, such as "Wheeled" or "Repulsorcraft".
  vehicleClass: String!

  # The ISO 8601 date format of the time that this resource was created.
  createdAt: String!

  # The ISO 8601 date format of the time that this resource was updated.
  updatedAt: String!
}

# The connection type for Vehicle.
type VehicleConnection {
  # A list of edges.
  edges: [VehicleEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type VehicleEdge {
  # The item at the end of the edge.
  node: Vehicle

  # A cursor for use in pagination.
  cursor: String!
}